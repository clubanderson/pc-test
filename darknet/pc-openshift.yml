apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: workspace-pvc
  namespace: test-and
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi  # Adjust the storage size as needed
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: yolo-weights-pvc
  namespace: test-and
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi  # Adjust the storage size as needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pc-darknet-deployment
  namespace: test-and
spec:
  replicas: 1
  selector:
    matchLabels:
      app: darknet-app
  template:
    metadata:
      labels:
        app: darknet-app
    spec:
      containers:
      - name: darknet-container
        image: daisukekobayashi/darknet:gpu
        # image: daisukekobayashi/darknet:gpu-cv-cc86
        command: ["darknet"]
        args:
        - "detector"
        - "train"
        - "/data/obj.data"
        - "/cfg/yolov4-custom1.cfg"
        - "/yolo/yolov4.conv.137"
        volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
        - name: yolo-volume
          mountPath: /yolo
        - name: pc-data-configmap-volume
          mountPath: /data
        - name: pc-yolo-cfg-configmap-volume
          mountPath: /cfg
      volumes:
      - name: workspace-volume
        persistentVolumeClaim:
          claimName: workspace-pvc  # Reference the PVC name here
      - name: yolo-volume
        persistentVolumeClaim:
          claimName: yolo-weights-pvc
      - name: pc-data-configmap-volume
        configMap:
          name: pc-data-configmap
      - name: pc-yolo-cfg-configmap-volume
        configMap:
          name: pc-yolo-cfg-configmap

